<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tdpro.mapper.PVoucherMapper" >
  <resultMap id="BaseResultMap" type="com.tdpro.entity.PVoucher" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="voucherName" property="voucherName" jdbcType="VARCHAR" />
    <result column="faceValue" property="faceValue" jdbcType="DECIMAL" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="isSill" property="isSill" jdbcType="INTEGER" />
    <result column="mainSill" property="mainSill" jdbcType="DECIMAL" />
    <result column="issueNum" property="issueNum" jdbcType="INTEGER" />
    <result column="useNum" property="useNum" jdbcType="INTEGER" />
    <result column="timeType" property="timeType" jdbcType="INTEGER" />
    <result column="startTime" property="startTime" jdbcType="TIMESTAMP" />
    <result column="endTime" property="endTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="isDel" property="isDel" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="useExplain" property="useExplain" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, voucherName, faceValue, price, isSill, mainSill, issueNum, useNum, timeType, 
    startTime, endTime, `state`, isDel, createTime, useExplain
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from p_voucher
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from p_voucher
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.tdpro.entity.PVoucher" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into p_voucher (voucherName, faceValue, price, 
      isSill, mainSill, issueNum, 
      useNum, timeType, startTime, 
      endTime, `state`, isDel, 
      createTime, useExplain)
    values (#{voucherName,jdbcType=VARCHAR}, #{faceValue,jdbcType=DECIMAL}, #{price,jdbcType=DECIMAL}, 
      #{isSill,jdbcType=INTEGER}, #{mainSill,jdbcType=DECIMAL}, #{issueNum,jdbcType=INTEGER}, 
      #{useNum,jdbcType=INTEGER}, #{timeType,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, #{isDel,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{useExplain,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tdpro.entity.PVoucher" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into p_voucher
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="voucherName != null" >
        voucherName,
      </if>
      <if test="faceValue != null" >
        faceValue,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="isSill != null" >
        isSill,
      </if>
      <if test="mainSill != null" >
        mainSill,
      </if>
      <if test="issueNum != null" >
        issueNum,
      </if>
      <if test="useNum != null" >
        useNum,
      </if>
      <if test="timeType != null" >
        timeType,
      </if>
      <if test="startTime != null" >
        startTime,
      </if>
      <if test="endTime != null" >
        endTime,
      </if>
      <if test="state != null" >
        `state`,
      </if>
      <if test="isDel != null" >
        isDel,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="useExplain != null" >
        useExplain,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="voucherName != null" >
        #{voucherName,jdbcType=VARCHAR},
      </if>
      <if test="faceValue != null" >
        #{faceValue,jdbcType=DECIMAL},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="isSill != null" >
        #{isSill,jdbcType=INTEGER},
      </if>
      <if test="mainSill != null" >
        #{mainSill,jdbcType=DECIMAL},
      </if>
      <if test="issueNum != null" >
        #{issueNum,jdbcType=INTEGER},
      </if>
      <if test="useNum != null" >
        #{useNum,jdbcType=INTEGER},
      </if>
      <if test="timeType != null" >
        #{timeType,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="useExplain != null" >
        #{useExplain,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tdpro.entity.PVoucher" >
    update p_voucher
    <set >
      <if test="voucherName != null" >
        voucherName = #{voucherName,jdbcType=VARCHAR},
      </if>
      <if test="faceValue != null" >
        faceValue = #{faceValue,jdbcType=DECIMAL},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="isSill != null" >
        isSill = #{isSill,jdbcType=INTEGER},
      </if>
      <if test="mainSill != null" >
        mainSill = #{mainSill,jdbcType=DECIMAL},
      </if>
      <if test="issueNum != null" >
        issueNum = #{issueNum,jdbcType=INTEGER},
      </if>
      <if test="useNum != null" >
        useNum = #{useNum,jdbcType=INTEGER},
      </if>
      <if test="timeType != null" >
        timeType = #{timeType,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        startTime = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        endTime = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        `state` = #{state,jdbcType=INTEGER},
      </if>
      <if test="isDel != null" >
        isDel = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="useExplain != null" >
        useExplain = #{useExplain,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tdpro.entity.PVoucher" >
    update p_voucher
    set voucherName = #{voucherName,jdbcType=VARCHAR},
      faceValue = #{faceValue,jdbcType=DECIMAL},
      price = #{price,jdbcType=DECIMAL},
      isSill = #{isSill,jdbcType=INTEGER},
      mainSill = #{mainSill,jdbcType=DECIMAL},
      issueNum = #{issueNum,jdbcType=INTEGER},
      useNum = #{useNum,jdbcType=INTEGER},
      timeType = #{timeType,jdbcType=INTEGER},
      startTime = #{startTime,jdbcType=TIMESTAMP},
      endTime = #{endTime,jdbcType=TIMESTAMP},
      `state` = #{state,jdbcType=INTEGER},
      isDel = #{isDel,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      useExplain = #{useExplain,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectListByUid" resultType="com.tdpro.entity.extend.UserVoucherETD" parameterType="com.tdpro.entity.extend.UserVoucherETD">
    select v.id as voucherId,v.startTime,v.endTime,v.voucherName,v.faceValue,v.price,v.isSill,v.mainSill,
    v.timeType,v.useExplain,(select count(*) from p_user_voucher where voucherId=v.id and uid=#{uid} and useState=0 and state=0) as number
    from p_voucher v
    group by v.id
  </select>
  <select id="findPageList" resultType="com.tdpro.entity.extend.VoucherPageETD" parameterType="com.tdpro.entity.extend.VoucherPageETD">
    select v.voucherName,v.faceValue,
    (select count(*) from p_user_voucher where voucherId=v.id) as circulation,
    (select count(*) from p_user_voucher where voucherId=v.id and useState=-1) as useNum
    from p_voucher v
  </select>
</mapper>