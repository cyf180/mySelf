<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tdpro.mapper.PUserVoucherMapper" >
  <resultMap id="BaseResultMap" type="com.tdpro.entity.PUserVoucher" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="uid" property="uid" jdbcType="BIGINT" />
    <result column="voucherId" property="voucherId" jdbcType="BIGINT" />
    <result column="useState" property="useState" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="startTime" property="startTime" jdbcType="TIMESTAMP" />
    <result column="endTime" property="endTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, `uid`, voucherId, useState, `state`, startTime, endTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from p_user_voucher
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from p_user_voucher
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.tdpro.entity.PUserVoucher" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into p_user_voucher (`uid`, voucherId, useState, 
      `state`, startTime, endTime
      )
    values (#{uid,jdbcType=BIGINT}, #{voucherId,jdbcType=BIGINT}, #{useState,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tdpro.entity.PUserVoucher" useGeneratedKeys="true" keyProperty="id">
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into p_user_voucher
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        `uid`,
      </if>
      <if test="voucherId != null" >
        voucherId,
      </if>
      <if test="useState != null" >
        useState,
      </if>
      <if test="state != null" >
        `state`,
      </if>
      <if test="startTime != null" >
        startTime,
      </if>
      <if test="endTime != null" >
        endTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="voucherId != null" >
        #{voucherId,jdbcType=BIGINT},
      </if>
      <if test="useState != null" >
        #{useState,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tdpro.entity.PUserVoucher" >
    update p_user_voucher
    <set >
      <if test="uid != null" >
        `uid` = #{uid,jdbcType=BIGINT},
      </if>
      <if test="voucherId != null" >
        voucherId = #{voucherId,jdbcType=BIGINT},
      </if>
      <if test="useState != null" >
        useState = #{useState,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        `state` = #{state,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        startTime = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        endTime = #{endTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tdpro.entity.PUserVoucher" >
    update p_user_voucher
    set `uid` = #{uid,jdbcType=BIGINT},
      voucherId = #{voucherId,jdbcType=BIGINT},
      useState = #{useState,jdbcType=INTEGER},
      `state` = #{state,jdbcType=INTEGER},
      startTime = #{startTime,jdbcType=TIMESTAMP},
      endTime = #{endTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectListByUid" resultType="com.tdpro.entity.extend.UserVoucherETD" parameterType="com.tdpro.entity.extend.UserVoucherETD">
    select uv.id,uv.uid,uv.voucherId,uv.useState,uv.state,uv.startTime,uv.endTime,v.voucherName,v.faceValue,v.price,v.isSill,v.mainSill,
    v.timeType,v.useExplain,(select count(*) from p_user_voucher where voucherId=uv.voucherId and useState=0 and state=0) as number
    from p_user_voucher uv
    left join p_voucher v on uv.voucherId=v.id
    where uv.uid=#{uid}
    group by uv.voucherId
  </select>
  <select id="countByUidAndVoucherId" resultMap="BaseResultMap" parameterType="com.tdpro.entity.extend.UserVoucherETD">
    select
    <include refid="Base_Column_List" />
    from p_user_voucher
    where `state` = 0
    and useState = 0
    and uid=#{uid}
    and voucherId=#{voucherId}
    limit #{number}
  </select>
  <update id="updateIsUse">
    update p_user_voucher set useState = -1
    where id in (
    <foreach collection="list" item="item" index="index" separator=",">
      #{item.id}
    </foreach>
    )
  </update>
  <update id="updateIsUseByU">
    update p_user_voucher set useState = -1
    where id in (
    <foreach collection="list" item="item" index="index" separator=",">
      #{item.id}
    </foreach>
    )
  </update>
  <update id="updateIsLock">
    update p_user_voucher set useState = 1
    where useState = 0
    and id in (
    <foreach collection="list" item="item" index="index" separator=",">
      #{item.id}
    </foreach>
    )
  </update>
  <update id="updateRelease">
    update p_user_voucher set useState = 0
    where useState = 1
    and id in (
    <foreach collection="list" item="item" index="index" separator=",">
      #{item.userVoucherId}
    </foreach>
    )
  </update>
</mapper>